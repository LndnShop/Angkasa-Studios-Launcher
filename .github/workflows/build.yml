name: Release Workflow

on:
  push:
    branches:
      - main  # Adjust the branch as per your needs

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist
        shell: bash

      - name: Create or Update Release
        id: create_or_update_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="v0.1.1"
          release_name="Beta Release v0.1.1"
          body="Release notes and description here."
          draft=true  # Set to true if you want to create a draft release
          
          # Check if release with the tag already exists
          existing_release_id=$(curl -sSL -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${tag}" | jq -r '.id // empty')
          
          if [[ -n "$existing_release_id" ]]; then
            # Update existing release
            echo "Updating existing release $tag"
            curl -X PATCH -sSL \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${existing_release_id}" \
              -d '{"tag_name": "'"$tag"'","name": "'"$release_name"'","body": "'"$body"'","draft": '"$draft"'}'
          else
            # Create new release
            echo "Creating new release $tag"
            curl -X POST -sSL \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
              -d '{"tag_name": "'"$tag"'","name": "'"$release_name"'","body": "'"$body"'","draft": '"$draft"'}'
          fi
          
          echo "::set-output name=release_id::$existing_release_id"
