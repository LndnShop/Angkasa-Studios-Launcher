name: Build and Release (Multi-OS)

on:
  push:
    tags: [ 'v*' ]  # Trigger only on pushes to tags starting with 'v'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # Adjust OSes as needed
      fail-fast: false  # Continue all steps even if one fails (optional)

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up environment (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up environment (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-python@v4
        with:
          python-version: 3.x  # Replace with Node.js setup for Windows if needed

      - name: Install Dependencies (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: npm ci
        shell: bash

      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: pip install requirements.txt  # Replace with your Windows dependency installation command

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |  # Adapt the build command for each OS if necessary
          if [[ runner.os == 'Linux' || runner.os == 'macOS' ]]; then
            npm run dist
          else
            # Windows build command
            your_windows_build_command
          fi
        shell: bash

      - name: Create Release (if successful build)
        uses: actions/create-release@v1  # Create a release on success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}  # Use the pushed tag for release name
          release_name: Release ${{ github.ref }}  # Custom release name (optional)
          body: |  # Provide informative release notes (optional)
            This release includes changes from commits:
            * ${{ github.sha }}

      - name: Upload Release Asset (if release created)
        uses: actions/upload-release-asset@v1  # Upload the built file if release is created
        if: steps.create-release.outputs.id  # Only upload if release exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist/your_built_file_${{ runner.os }}.zip  # Dynamic asset name for each OS
          asset_name: your_built_file_${{ runner.os }}.zip  # Customize the uploaded file name
          asset_content_type: application/zip  # Adjust for your file type
